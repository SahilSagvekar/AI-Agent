generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql" or "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  name     String?
  businessName        String?
  address             String?
  phone               String?
  website             String?
  googleMapsUrl       String?
  firstPayment        Boolean?

  laundromatLocations LaundromatLocation[]
}

model LaundromatLocation {
  id            Int       @id @default(autoincrement())
  userId        Int
  locationName  String?
  businessName  String?
  address       String
  phone         String
  areaCode      String?
  twilioPhone   String?
  email         String?
  website       String?
  googleMapsUrl String?

  user           User          @relation(fields: [userId], references: [id])
  operatingHours OperatingHours?
  services       Services?
  pricing        Pricing?
  machineInfo    MachineInfo?
  amenities      Amenities?
  questions      Questions?
  callHandling   CallHandling?
  languageSettings LanguageSettings?
  businessTone   BusinessTone?
  policies       Policies?
}

model OperatingHours {
  id             Int    @id @default(autoincrement())
  locationId     Int    @unique
  weekdayHours   String
  weekendHours   String?
  openOnHolidays Boolean
  holidayNote    String?
  lastWashTime   String?

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model Services {
  id         Int    @id @default(autoincrement())
  locationId Int    @unique
  services   Json

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model Pricing {
  id                   Int    @id @default(autoincrement())
  locationId           Int    @unique
  washerPrices         String
  dryerPrices          String
  washFoldRate         String?
  dryCleaningPrices    String?
  pickupDeliveryPricing String?
  minimumCharges       String?
  paymentMethods       Json

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model MachineInfo {
  id                  Int     @id @default(autoincrement())
  locationId          Int     @unique
  totalWashers        String
  totalDryers         String?
  machineOperationType String?
  machinesModern      Boolean
  largeMachines       Boolean

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model Amenities {
  id         Int    @id @default(autoincrement())
  locationId Int    @unique
  amenities  Json

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model Questions {
  id              Int    @id @default(autoincrement())
  locationId      Int    @unique
  commonQuestions Json
  customQuestions Json

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model CallHandling {
  id                Int    @id @default(autoincrement())
  locationId        Int    @unique
  callHandlingStyle String
  forwardingEnabled Boolean
  forwardingNumber  String?
  forwardingHours   String?

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model LanguageSettings {
  id                Int    @id @default(autoincrement())
  locationId        Int    @unique
  languages         Json
  autoDetectLanguage Boolean

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model BusinessTone {
  id            Int    @id @default(autoincrement())
  locationId    Int    @unique
  businessTone  String
  customPhrases String?
  businessIntro String?

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}

model Policies {
  id                Int    @id @default(autoincrement())
  locationId        Int    @unique
  lostFoundPolicy   String?
  refundPolicy      String?
  covidPolicies     String?
  timeLimits       String?
  unattendedPolicy String?
  additionalPolicies String?

  laundromatLocation LaundromatLocation @relation(fields: [locationId], references: [id])
}
