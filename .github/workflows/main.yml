name: Deploy Next.js application

on:
  push:
    branches: [main, master]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
          echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> .env
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}" >> .env
          echo "STRIPE_INTRO_PRICE_ID=${{ secrets.STRIPE_INTRO_PRICE_ID }}" >> .env
          echo "STRIPE_NORMAL_PRICE_ID=${{ secrets.STRIPE_NORMAL_PRICE_ID }}" >> .env
          echo "STRIPE_ADD_LOCATION_PRICE_ID=${{ secrets.STRIPE_ADD_LOCATION_PRICE_ID }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "NINJAS_API_KEY=${{ secrets.NINJAS_API_KEY }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env

      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_USERNAME }}/nextjs-app:latest .

      - name: Login to docker hub
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login -u ${{ env.DOCKER_USERNAME }} --password-stdin

      - name: Publish image to docker hub
        run: docker push ${{ env.DOCKER_USERNAME }}/nextjs-app:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull ${{ env.DOCKER_USERNAME }}/nextjs-app:latest

      - name: Delete old container
        run: docker rm -f nextjs-app-container || true

      - name: Run docker container
        run: docker run -d -p 80:3000 --name nextjs-app-container ${{ env.DOCKER_USERNAME }}/nextjs-app:latest
