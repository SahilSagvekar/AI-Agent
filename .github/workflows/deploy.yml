name: CI/CD to EC2

on:
  push:
    branches: [ main, master ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my-ai-agent
  EC2_HOST: 3.88.159.156      
  EC2_USER: ec2-user
  DOCKER_CONTAINER_NAME: my-ai-agent

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build, Tag and Push Docker image
        run: |
          IMAGE_TAG=$(date +%s)
          IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull $IMAGE_URI
            docker stop $DOCKER_CONTAINER_NAME || true
            docker rm $DOCKER_CONTAINER_NAME || true
            docker run -d --restart unless-stopped \
              --name $DOCKER_CONTAINER_NAME \
              --env-file /home/ec2-user/my-app/.env \
              -p 3000:3000 \
              $IMAGE_URI
